<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: test-doubles | Jake Goulding]]></title>
  <link href="http://jakegoulding.com/blog/categories/test-doubles/atom.xml" rel="self"/>
  <link href="http://jakegoulding.com/"/>
  <updated>2014-04-26T19:12:12-04:00</updated>
  <id>http://jakegoulding.com/</id>
  <author>
    <name><![CDATA[Jake Goulding]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test Double Terminology]]></title>
    <link href="http://jakegoulding.com/blog/2012/01/12/test-double-terminology/"/>
    <updated>2012-01-12T07:37:00-05:00</updated>
    <id>http://jakegoulding.com/blog/2012/01/12/test-double-terminology</id>
    <content type="html"><![CDATA[<p>While listening to the Code Quality panel discussion at
<a href="http://codemash.org/">CodeMash</a>, I <a href="https://twitter.com/#!/JakeGoulding/status/157261614448521216">tweeted</a> about &ldquo;the state
of mocking&rdquo;:</p>

<blockquote><p>The state of &ldquo;mocking&rdquo; is that the term &ldquo;mocking&rdquo; is misused by
everyone. You often mean &ldquo;test double&rdquo; or &ldquo;stub&rdquo;.</p></blockquote>

<p>This garnered some retweets and some great replies, so I wanted to
have the opportunity to respond in a little longer form. I&rsquo;ve written
this post between sessions and in the halls, so give me a little
leeway and feel free to send me a tweet with corrections, arguments,
whatever.</p>

<!-- more -->


<h2>Test frameworks encourage misuse</h2>

<blockquote><p>[I]t doesn&rsquo;t help that most mocking frameworks are used for stubs</p></blockquote>

<p><a href="https://twitter.com/#!/F1nglas/status/157421334220120065">@F1nglas</a> mentions that <a href="http://code.google.com/p/moq/">moq</a> does this, and I
know that <a href="http://code.google.com/p/mockito/">Mockito</a> does as well. <a href="https://www.relishapp.com/rspec">RSpec</a> does better
in this area. From the <a href="https://www.relishapp.com/rspec/rspec-mocks">rspec-mock</a> documentation:</p>

<blockquote><p>Use the <code>double</code> method to create [a test double.] You can also use
the <code>mock</code> and <code>stub</code> methods to create test doubles, however these
methods are there for backward compatibility only</p></blockquote>

<p>Remember that most of these tools we use are open source: we can
submit patches to improve them. In the meantime, we can add local
alias methods that better express our intent.</p>

<h2>Saying &ldquo;mock&rdquo; is just more fluid</h2>

<blockquote><p>[P]eople find it easier to say &ldquo;I&rsquo;ll mock that out&rdquo; than &ldquo;I&rsquo;ll
test-double that out&rdquo;.</p></blockquote>

<p><a href="https://twitter.com/#!/jitterted/status/157265770403987456">@jitterted</a>&rsquo;s point is spot on; it <em>is</em> easier to say
&ldquo;mock&rdquo;. However, I don&rsquo;t usually want to use just a test double. I
always want to do/use something particular: stub, mock, dummy, etc.</p>

<p>I&rsquo;d love it if we as a community could come up with a better verb to
use to mean the generic &ldquo;use a test double&rdquo;.</p>

<h2>Doesn&rsquo;t language evolve?</h2>

<blockquote><p>[A] term takes on the meaning that &ldquo;everyone&rdquo; gives it</p></blockquote>

<p><a href="https://twitter.com/#!/JuliansThoughts/status/157372211840299009">@JuliansThoughts</a></p>

<blockquote><p>The meaning of a word is defined by common understanding</p></blockquote>

<p><a href="https://twitter.com/#!/roblally/status/157361888420827137">@roblally</a></p>

<blockquote><p>[M]isused by everyone is an evolving definition</p></blockquote>

<p><a href="https://twitter.com/#!/boulderDanH/status/157262539372249088">@boulderDanH</a></p>

<p>Let me get this out of the way first: I <strong>love</strong> the evolution of
language. Dropping irrelevant words, new words being created, and
expanding the meaning of existing words are all good things.</p>

<p>The root issue here is not that language is evolving. The root issue
is that our understanding of the tools and techniques we are referring
to by that language hasn&rsquo;t gotten to the point where we can substitute
one for the other and know <strong>conclusively</strong> what we really mean.</p>

<p>If I said to you, the programmer: &ldquo;Use a list to store the names&rdquo;. You
go off and write whatever you need, then come back for code review and
I now say: &ldquo;Why can&rsquo;t I look up a specific name efficiently?&rdquo;. You
would be outraged; why did I tell you to use a list when I really
meant a hashtable instead? My response? &ldquo;Oh, you know that language
evolves&rdquo;.</p>

<p>If I&rsquo;d originally said to use a &ldquo;collection&rdquo;, a more abstract concept
than either list or hashtable, that would force you to think about
what you need to do and how you were going to do it. I&rsquo;m not
conflating a specific idea with a general concept.</p>

<p>As community, we have heaps of experience with various types of
collections; we don&rsquo;t have that same strong background with test
doubles yet. When we use &ldquo;mock&rdquo; when we should use &ldquo;dummy&rdquo; or &ldquo;stub&rdquo;
or &ldquo;test double&rdquo;, we avoid thinking about what we really need to do
and why we need to do it.</p>

<p>By using &ldquo;mock&rdquo; inappropriately, we confuse two distinct concepts. We
then complain that &ldquo;mocks&rdquo; suck and don&rsquo;t do what we need them to
do. Mocks, stubs, fakes and dummies all have a place and a
purpose. Just as using a list when you should use a hashtable reflects
poorly on the programmer, so does using a mock when you should use a
stub.</p>

<p>Mocks are <strong>not</strong> stubs. Don&rsquo;t believe me. Believe
<a href="http://martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs">Martin Fowler</a>. Believe
<a href="http://xunitpatterns.com/">Gerard Meszaros</a>. Watch
<a href="http://confreaks.net/videos/659-rubyconf2011-why-you-don-t-get-mock-objects">Why You Don&rsquo;t Get Mock Objects</a> by Gregory
Moeck. Whatever you do, make sure you understand what a mock object
truly is before you start conflating terms.</p>

<p><em>Note:</em> Don&rsquo;t take from this post that I always do or say the right
thing. I have other posts on this same blog that incorrectly refer to
test doubles as &ldquo;mocks&rdquo;. Most of those posts were written before I
learned the difference myself. I should edit those posts to clarify my
real intent. The important thing is that as we go forward we should be
careful and precise about what we mean.</p>

<p>Discuss on <a href="http://www.reddit.com/r/programming/comments/off9p/test_double_terminology_the_misuse_of_the_term/">reddit</a> or <a href="http://news.ycombinator.com/item?id=3460509">Hacker News</a>.</p>
]]></content>
  </entry>
  
</feed>
