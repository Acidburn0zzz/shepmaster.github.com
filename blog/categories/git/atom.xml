<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | Jake Goulding]]></title>
  <link href="http://jakegoulding.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://jakegoulding.com/"/>
  <updated>2013-01-15T20:06:55-05:00</updated>
  <id>http://jakegoulding.com/</id>
  <author>
    <name><![CDATA[Jake Goulding]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Quickly fixing your last Git commit]]></title>
    <link href="http://jakegoulding.com/blog/2011/09/18/quickly-fixing-your-last-git-commit/"/>
    <updated>2011-09-18T13:53:00-04:00</updated>
    <id>http://jakegoulding.com/blog/2011/09/18/quickly-fixing-your-last-git-commit</id>
    <content type="html"><![CDATA[<p>Git encourages you to create commits early and frequently, but I often
find that my last commit isn't quite as awesome as I'd like it to
be. However, there are three little tricks I use to tweak it a bit.</p>

<!-- more -->


<p>The main use for amending your commit is changing your last commit
message:</p>

<pre><code>$ git commit --amend
</code></pre>

<p>However, if you add files before you amend your commit, those files
will be combined with the commit. This is great if you missed a file,
or if you forgot to save that very last change in your editor.</p>

<pre><code>$ git add README.txt
$ git commit --amend
</code></pre>

<p>Amending your commit will bring up your editor to change your commit
message; what should you do if your previous message was just fine?
Just reuse the commit message!</p>

<pre><code>$ git add README.txt
$ git commit --amend -C HEAD
</code></pre>

<p>This is conceptually the same as the "fixup" command when rebasing, so
you could alias it as <code>git fixup</code>.</p>

<pre><code>$ git add README.txt
$ git fixup
</code></pre>

<h4>Update - 8:30 PM EDT</h4>

<p><a href="http://twitter.com/nick_rutherford">Nick Rutherford</a> reminded me to caution everyone that you should
never amend your commit <em>after</em> you have pushed it or made it public
in some fashion. This is for the same reason that you should never
rebase commits that are already public: you are changing history that
other people may have already grabbed a copy of.</p>
]]></content>
  </entry>
  
</feed>
